{"version":3,"file":"1-timer-68da346e.js","sources":["../../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\"\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\n\n\nconst btnEl = document.querySelector(\".btn\")\nconst inputEl = document.querySelector(\"#datetime-picker\")\nconst spanTimeEl = document.querySelectorAll('.value')\nlet userSelectedDate;\nlet timeInterval;\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    timeInterval = userSelectedDate - options.defaultDate;\n    if (timeInterval < 1) {\n        iziToast.error({\n          color: 'red',\n          position: 'topRight',\n          message: `Please choose a date in the future`,\n        });\n      } else {\n        btnEl.disabled = false;\n        inputEl.disabled = true;\n      }\n    },\n  };\n\nconst calendars = flatpickr(\"#datetime-picker\", options)\n\n\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n\n\nbtnEl.disabled = true;\n\nbtnEl.addEventListener('click', event => {\n  const repeatTime = setInterval(() => {\n    timeInterval = userSelectedDate - new Date();\n    if (timeInterval < 1) {\n        btnEl.disabled = true;\n      clearInterval(repeatTime);\n      return;\n    }\n    const timer = convertMs(timeInterval);\n    spanTimeEl[0].innerText = timer.days.toString().padStart(2, '0');\n    spanTimeEl[1].innerText = timer.hours.toString().padStart(2, '0');\n    spanTimeEl[2].innerText = timer.minutes.toString().padStart(2, '0');\n    spanTimeEl[3].innerText = timer.seconds.toString().padStart(2, '0');\n  }, 1000);\n});"],"names":["btnEl","inputEl","spanTimeEl","userSelectedDate","timeInterval","options","selectedDates","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","event","repeatTime","timer"],"mappings":"gDAQA,MAAMA,EAAQ,SAAS,cAAc,MAAM,EACrCC,EAAU,SAAS,cAAc,kBAAkB,EACnDC,EAAa,SAAS,iBAAiB,QAAQ,EACrD,IAAIC,EACAC,EACJ,MAAMC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACvBH,EAAmBG,EAAc,CAAC,EAClCF,EAAeD,EAAmBE,EAAQ,YACtCD,EAAe,EACfG,EAAS,MAAM,CACb,MAAO,MACP,SAAU,WACV,QAAS,oCACnB,CAAS,GAEDP,EAAM,SAAW,GACjBC,EAAQ,SAAW,GAEtB,CACL,EAEkBO,EAAU,mBAAoBH,CAAO,EAIvD,SAASI,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAIAd,EAAM,SAAW,GAEjBA,EAAM,iBAAiB,QAASe,GAAS,CACvC,MAAMC,EAAa,YAAY,IAAM,CAEnC,GADAZ,EAAeD,EAAmB,IAAI,KAClCC,EAAe,EAAG,CAClBJ,EAAM,SAAW,GACnB,cAAcgB,CAAU,EACxB,MACD,CACD,MAAMC,EAAQR,EAAUL,CAAY,EACpCF,EAAW,CAAC,EAAE,UAAYe,EAAM,KAAK,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC/Df,EAAW,CAAC,EAAE,UAAYe,EAAM,MAAM,SAAQ,EAAG,SAAS,EAAG,GAAG,EAChEf,EAAW,CAAC,EAAE,UAAYe,EAAM,QAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,EAClEf,EAAW,CAAC,EAAE,UAAYe,EAAM,QAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,CACnE,EAAE,GAAI,CACT,CAAC"}